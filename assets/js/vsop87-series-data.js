/**
 * VSOP87 Series Data with Optimization Support
 * Provides coefficient data with truncation and caching capabilities
 */

class VSOP87SeriesData {
  constructor() {
    this.cache = new Map();
    this.truncationLevels = {
      high: { maxTerms: 1000, minCoeff: 1e-9 },
      medium: { maxTerms: 500, minCoeff: 1e-8 },
      low: { maxTerms: 100, minCoeff: 1e-7 },
      minimal: { maxTerms: 50, minCoeff: 1e-6 }
    };
    this.defaultPrecision = 'medium';
    this.loadedSeries = new Set();
  }

  /**
   * Get optimized series data for a planet with truncation
   */
  getSeries(planet, precision = null) {
    precision = precision || this.defaultPrecision;
    const cacheKey = `${planet}_${precision}`;
    
    if (this.cache.has(cacheKey)) {
      return this.cache.get(cacheKey);
    }

    const rawSeries = this.getRawSeries(planet);
    const optimizedSeries = this.truncateSeries(rawSeries, precision);
    
    this.cache.set(cacheKey, optimizedSeries);
    return optimizedSeries;
  }

  /**
   * Truncate series based on precision requirements
   */
  truncateSeries(series, precision) {
    const config = this.truncationLevels[precision];
    const truncated = {};

    for (const [seriesName, terms] of Object.entries(series)) {
      truncated[seriesName] = this.truncateTerms(terms, config);
    }

    return truncated;
  }

  /**
   * Truncate individual term arrays
   */
  truncateTerms(terms, config) {
    if (!Array.isArray(terms)) return terms;

    // Sort by coefficient magnitude (descending)
    const sortedTerms = terms.slice().sort((a, b) => Math.abs(b[0]) - Math.abs(a[0]));
    
    // Apply truncation limits
    let truncated = sortedTerms.slice(0, config.maxTerms);
    truncated = truncated.filter(term => Math.abs(term[0]) >= config.minCoeff);

    return truncated;
  }

  /**
   * Get raw (untruncated) series data for planets
   */
  getRawSeries(planet) {
    switch (planet.toLowerCase()) {
      case 'sun':
        return this.getSunSeries();
      case 'mercury':
        return this.getMercurySeries();
      case 'venus':
        return this.getVenusSeries();
      case 'mars':
        return this.getMarsSeries();
      case 'jupiter':
        return this.getJupiterSeries();
      case 'saturn':
        return this.getSaturnSeries();
      case 'uranus':
        return this.getUranusSeries();
      case 'neptune':
        return this.getNeptuneSeries();
      default:
        throw new Error(`Unknown planet: ${planet}`);
    }
  }

  /**
   * Sun VSOP87 series (Earth's heliocentric coordinates)
   */
  getSunSeries() {
    return {
      L0: [
        [175347046.0, 0, 0],
        [3341656.0, 4.6692568, 6283.0758500],
        [34894.0, 4.6261, 12566.1517],
        [3497.0, 2.7441, 5753.3849],
        [3418.0, 2.8289, 3.5231],
        [3136.0, 3.6277, 77713.7715],
        [2676.0, 4.4181, 7860.4194],
        [2343.0, 6.1352, 3930.2097],
        [1324.0, 0.7425, 11506.7698],
        [1273.0, 2.0371, 529.6910],
        [1199.0, 1.1096, 1577.3435],
        [990.0, 5.233, 5884.927],
        [902.0, 2.045, 26.298],
        [857.0, 3.508, 398.149],
        [780.0, 1.179, 5223.694],
        [753.0, 2.533, 5507.553],
        [505.0, 4.583, 18849.228],
        [492.0, 4.205, 775.523],
        [357.0, 2.920, 0.067],
        [317.0, 5.849, 11790.629],
        [284.0, 1.899, 796.298],
        [271.0, 0.315, 10977.079],
        [243.0, 0.345, 5486.778],
        [206.0, 4.806, 2544.314],
        [205.0, 1.869, 5573.143],
        [202.0, 2.458, 6069.777],
        [156.0, 0.833, 213.299],
        [132.0, 3.411, 2942.463],
        [126.0, 1.083, 20.775],
        [115.0, 0.645, 0.980],
        [103.0, 0.636, 4694.003],
        [102.0, 0.976, 15720.839],
        [102.0, 4.267, 7.114],
        [99.0, 6.21, 2146.17],
        [98.0, 0.68, 155.42],
        [86.0, 5.98, 161000.69],
        [85.0, 1.30, 6275.96],
        [85.0, 3.67, 71430.70],
        [80.0, 1.81, 17260.15],
        [79.0, 3.04, 12036.46],
        [75.0, 1.76, 5088.63],
        [74.0, 3.50, 3154.69],
        [74.0, 4.68, 801.82],
        [70.0, 0.83, 9437.76],
        [62.0, 3.98, 8827.39],
        [61.0, 1.82, 7084.90],
        [57.0, 2.78, 6286.60],
        [56.0, 4.39, 14143.50],
        [56.0, 3.47, 6279.55],
        [52.0, 0.19, 12139.55]
      ],
      L1: [
        [628331966747.0, 0, 0],
        [206059.0, 2.678235, 6283.075850],
        [4303.0, 2.6351, 12566.1517],
        [425.0, 1.590, 3.523],
        [119.0, 5.796, 26.298],
        [109.0, 2.966, 1577.344],
        [93.0, 2.59, 18849.23],
        [72.0, 1.14, 529.69],
        [68.0, 1.87, 398.15],
        [67.0, 4.41, 5507.55],
        [59.0, 2.89, 5223.69],
        [56.0, 2.17, 155.42],
        [45.0, 0.40, 796.30],
        [36.0, 0.47, 775.52],
        [29.0, 2.65, 7.11],
        [21.0, 5.34, 0.98],
        [19.0, 1.85, 5486.78],
        [19.0, 4.97, 213.30],
        [17.0, 2.99, 6275.96],
        [16.0, 0.03, 2544.31],
        [16.0, 1.43, 2146.17],
        [15.0, 1.21, 10977.08],
        [12.0, 2.83, 1748.02],
        [12.0, 3.26, 5088.63],
        [12.0, 5.27, 1194.45],
        [12.0, 2.08, 4694.00],
        [11.0, 0.77, 553.57],
        [10.0, 1.30, 6286.60],
        [10.0, 4.24, 1349.87],
        [9.0, 2.70, 242.73]
      ],
      L2: [
        [52919.0, 0, 0],
        [8720.0, 1.0721, 6283.0758],
        [309.0, 0.867, 12566.152],
        [27.0, 0.05, 3.52],
        [16.0, 5.19, 26.30],
        [16.0, 3.68, 155.42],
        [10.0, 0.76, 18849.23],
        [9.0, 2.06, 77713.77],
        [7.0, 0.83, 775.52],
        [5.0, 4.66, 1577.34],
        [4.0, 1.03, 7.11],
        [4.0, 3.44, 5573.14],
        [3.0, 5.14, 796.30],
        [3.0, 6.05, 5507.55],
        [3.0, 1.19, 242.73],
        [3.0, 6.12, 529.69],
        [3.0, 0.31, 398.15],
        [3.0, 2.28, 553.57],
        [2.0, 4.38, 5223.69],
        [2.0, 3.75, 0.98]
      ],
      L3: [
        [289.0, 5.844, 6283.076],
        [35.0, 0, 0],
        [17.0, 5.49, 12566.15],
        [3.0, 5.20, 155.42],
        [1.0, 4.72, 3.52],
        [1.0, 5.30, 18849.23],
        [1.0, 5.97, 242.73]
      ],
      L4: [
        [114.0, 3.142, 0],
        [8.0, 4.13, 6283.08],
        [1.0, 3.84, 12566.15]
      ],
      L5: [
        [1.0, 3.14, 0]
      ]
    };
  }

  /**
   * Mercury VSOP87 series
   */
  getMercurySeries() {
    return {
      L0: [
        [440250710.0, 0, 0],
        [40989415.0, 1.48302034, 26087.90314157],
        [5046294.0, 4.4778549, 52175.8062831],
        [855347.0, 1.165203, 78263.709425],
        [165590.0, 4.119692, 104351.612566],
        [34561.0, 0.77931, 130439.51571],
        [7583.0, 3.7135, 156527.4188],
        [3560.0, 1.5120, 1109.3786],
        [1803.0, 4.1033, 5661.3320],
        [1726.0, 0.3583, 182615.3220],
        [1590.0, 2.9951, 25028.5212],
        [1365.0, 4.5992, 27197.2817],
        [1017.0, 0.8803, 31749.2352],
        [714.0, 1.541, 24978.525],
        [644.0, 5.303, 21535.650],
        [451.0, 6.050, 51116.424],
        [404.0, 3.282, 208703.225],
        [352.0, 5.242, 20426.571],
        [345.0, 2.792, 15874.618],
        [343.0, 5.765, 955.600],
        [339.0, 5.863, 25558.212],
        [325.0, 1.337, 53285.185],
        [273.0, 2.495, 529.691],
        [264.0, 3.917, 57837.138],
        [260.0, 0.987, 4551.953],
        [239.0, 0.113, 1059.382],
        [235.0, 0.267, 11322.664],
        [217.0, 0.660, 13521.751],
        [209.0, 2.092, 47623.853],
        [186.0, 5.799, 283.859],
        [179.0, 2.629, 19367.189],
        [176.0, 0.108, 79439.470],
        [164.0, 1.581, 17298.182],
        [164.0, 2.039, 19651.048],
        [161.0, 4.333, 8962.455],
        [142.0, 3.125, 5751.352]
      ],
      L1: [
        [2608814706223.0, 0, 0],
        [1126008.0, 6.2170397, 26087.9031416],
        [303471.0, 3.055655, 52175.806283],
        [80538.0, 6.10455, 78263.70942],
        [21245.0, 2.83532, 104351.61257],
        [5592.0, 5.8268, 130439.5157],
        [1472.0, 2.5185, 156527.4188],
        [388.0, 5.480, 182615.322],
        [352.0, 3.052, 1109.379],
        [103.0, 2.149, 208703.225],
        [94.0, 6.12, 27197.28],
        [91.0, 0.00, 24978.52],
        [52.0, 5.62, 5661.33],
        [44.0, 4.57, 25028.52],
        [28.0, 3.04, 51116.42],
        [27.0, 5.09, 234791.13]
      ],
      L2: [
        [53050.0, 0, 0],
        [16904.0, 4.69072, 26087.90314],
        [7397.0, 1.3474, 52175.8063],
        [3018.0, 4.4564, 78263.7094],
        [1107.0, 1.2623, 104351.6126],
        [378.0, 4.320, 130439.516],
        [123.0, 1.069, 156527.419],
        [39.0, 4.08, 182615.32],
        [15.0, 4.63, 1109.38],
        [12.0, 0.79, 208703.23]
      ],
      L3: [
        [188.0, 0.035, 52175.806],
        [142.0, 3.125, 26087.903],
        [97.0, 4.14, 78263.71],
        [44.0, 4.08, 104351.61],
        [35.0, 0, 0],
        [18.0, 1.42, 130439.52],
        [7.0, 5.85, 156527.42],
        [3.0, 0.67, 182615.32]
      ],
      L4: [
        [114.0, 3.1416, 0],
        [2.0, 2.03, 26087.90],
        [2.0, 1.42, 52175.81]
      ],
      L5: []
    };
  }

  /**
   * Venus VSOP87 series
   */
  getVenusSeries() {
    return {
      L0: [
        [317614667.0, 0, 0],
        [1353968.0, 5.5931332, 10213.2855462],
        [89892.0, 5.30104, 20426.57109],
        [5477.0, 4.4163, 7860.4194],
        [3456.0, 2.6996, 11790.6291],
        [2663.0, 2.1416, 9683.5946],
        [2572.0, 2.9777, 13362.4497],
        [2054.0, 1.9829, 6069.7767],
        [1835.0, 2.3917, 26.2983],
        [1447.0, 3.8705, 8399.6791],
        [1384.0, 0.8160, 19651.0485],
        [1232.0, 6.0441, 3.5231],
        [1015.0, 1.3214, 9437.7629],
        [954.0, 6.023, 18073.705],
        [885.0, 3.772, 1577.344],
        [547.0, 2.055, 1109.379],
        [463.0, 0.671, 9153.904],
        [455.0, 0.234, 8962.455]
      ],
      L1: [
        [1021328554621.0, 0, 0],
        [95708.0, 2.46424, 10213.28555],
        [14445.0, 0.51625, 20426.57109],
        [213.0, 1.795, 30639.857],
        [174.0, 2.655, 26.298],
        [152.0, 6.106, 18073.705],
        [82.0, 5.70, 1577.34],
        [70.0, 2.68, 9437.76],
        [52.0, 3.60, 775.52]
      ],
      L2: [
        [54127.0, 0, 0],
        [3891.0, 0.3451, 10213.2855],
        [1338.0, 2.0201, 20426.5711],
        [24.0, 2.05, 26.30],
        [19.0, 3.54, 30639.86],
        [10.0, 2.51, 775.52],
        [7.0, 0.48, 18073.70]
      ],
      L3: [
        [136.0, 2.286, 10213.286],
        [78.0, 3.68, 20426.57],
        [26.0, 0, 0]
      ],
      L4: [],
      L5: []
    };
  }

  /**
   * Mars VSOP87 series
   */
  getMarsSeries() {
    return {
      L0: [
        [620347712.0, 0, 0],
        [18656368.0, 5.0503710, 3340.6124267],
        [1108217.0, 5.4009984, 6681.2248533],
        [91798.0, 5.75479, 10021.83728],
        [27745.0, 5.97049, 3.52312],
        [12316.0, 0.84956, 2810.92146],
        [10610.0, 2.93958, 2281.23050],
        [8927.0, 4.1570, 0.0173],
        [8716.0, 6.1101, 13362.4497],
        [7775.0, 3.3397, 5621.8429],
        [6798.0, 0.3646, 398.1490],
        [4161.0, 0.2281, 2942.4634],
        [3575.0, 1.6619, 2544.3144],
        [3075.0, 0.8570, 191.4483],
        [2938.0, 6.0789, 0.0673],
        [2628.0, 0.6481, 3337.0893],
        [2580.0, 0.0300, 3344.1355],
        [2389.0, 4.2081, 796.2980]
      ],
      L1: [
        [334085627474.0, 0, 0],
        [1458227.0, 3.6042605, 3340.6124267],
        [164901.0, 3.926313, 6681.224853],
        [19963.0, 4.26594, 10021.83728],
        [3452.0, 4.7326, 3.5231],
        [2485.0, 4.6106, 13362.4497],
        [842.0, 4.459, 2281.230],
        [538.0, 5.016, 398.149],
        [521.0, 4.994, 3344.136],
        [433.0, 2.561, 2544.314],
        [430.0, 5.316, 191.448],
        [382.0, 3.539, 796.298]
      ],
      L2: [
        [58152.0, 0, 0],
        [22004.0, 2.03250, 3340.61243],
        [4128.0, 2.2124, 6681.2249],
        [696.0, 3.142, 0],
        [420.0, 2.982, 10021.837],
        [376.0, 3.677, 13362.450],
        [129.0, 0.644, 3.523],
        [108.0, 3.033, 2281.230],
        [86.0, 1.42, 2544.31],
        [76.0, 3.83, 398.15]
      ],
      L3: [
        [954.0, 3.14159, 0],
        [138.0, 0.293, 3340.612],
        [89.0, 2.80, 6681.22],
        [24.0, 1.61, 13362.45]
      ],
      L4: [],
      L5: []
    };
  }

  /**
   * Jupiter VSOP87 series (simplified for now)
   */
  getJupiterSeries() {
    return {
      L0: [
        [59954691.0, 0, 0],
        [9695899.0, 5.0619179, 529.6909651],
        [573610.0, 1.444062, 7.113547],
        [306389.0, 5.417347, 1059.381930],
        [97178.0, 4.14265, 632.78374],
        [72903.0, 3.64043, 522.57742],
        [64264.0, 3.41145, 103.09277],
        [39806.0, 2.29377, 419.48464],
        [38858.0, 1.27232, 316.39187],
        [27964.0, 1.78455, 536.80451]
      ],
      L1: [
        [52993480757.0, 0, 0],
        [489741.0, 4.220667, 529.690965],
        [228919.0, 6.026475, 7.113547],
        [27655.0, 4.57266, 1059.38193],
        [20721.0, 5.45939, 522.57742],
        [12106.0, 0.16986, 536.80451],
        [6068.0, 4.4242, 103.0928],
        [5434.0, 3.9848, 419.4846],
        [4238.0, 5.8901, 14.2271]
      ],
      L2: [
        [47234.0, 4.32148, 7.11355],
        [38966.0, 0, 0],
        [30629.0, 2.93021, 529.69097],
        [3189.0, 1.0550, 522.5774],
        [2729.0, 4.8455, 536.8045],
        [2723.0, 3.4141, 1059.3819],
        [1721.0, 4.1873, 14.2271],
        [383.0, 5.768, 419.485],
        [378.0, 0.760, 515.464]
      ],
      L3: [
        [6502.0, 2.5986, 7.1135],
        [1357.0, 1.3464, 529.6910],
        [471.0, 2.475, 14.227],
        [417.0, 3.245, 536.805],
        [353.0, 2.974, 522.577],
        [155.0, 2.076, 1059.382]
      ],
      L4: [
        [669.0, 0.853, 7.114],
        [114.0, 3.142, 0],
        [100.0, 0.743, 14.227]
      ],
      L5: [
        [50.0, 5.26, 7.11]
      ]
    };
  }

  /**
   * Saturn VSOP87 series (simplified for now)
   */
  getSaturnSeries() {
    return {
      L0: [
        [87401354.0, 0, 0],
        [11107660.0, 3.96205090, 213.29909544],
        [1414151.0, 4.5858152, 7.1135470],
        [398379.0, 0.521120, 206.185548],
        [350769.0, 3.303299, 426.598191],
        [206816.0, 4.123943, 103.092774],
        [79271.0, 3.84007, 220.41264],
        [23990.0, 4.66977, 110.20632],
        [16574.0, 0.43719, 419.48464],
        [15820.0, 0.93809, 632.78374]
      ],
      L1: [
        [21354295596.0, 0, 0],
        [1296855.0, 1.8282054, 213.2990954],
        [564348.0, 2.885001, 7.113547],
        [107679.0, 2.277699, 206.185548],
        [98323.0, 1.08070, 426.59819],
        [40255.0, 2.04128, 220.41264],
        [19942.0, 1.27955, 103.09277],
        [10512.0, 2.74880, 14.22709],
        [6939.0, 0.4049, 419.4846]
      ],
      L2: [
        [116441.0, 1.179879, 7.113547],
        [91921.0, 0.07425, 213.29910],
        [90592.0, 0, 0],
        [15277.0, 4.06492, 206.18555],
        [10631.0, 0.25778, 220.41264],
        [10605.0, 5.40964, 426.59819],
        [4265.0, 1.0460, 14.2271]
      ],
      L3: [
        [16039.0, 5.73945, 7.11355],
        [4250.0, 4.5854, 213.2991],
        [1907.0, 4.7608, 220.4126],
        [1466.0, 5.9133, 206.1855],
        [1162.0, 5.6197, 14.2271],
        [1067.0, 2.3499, 426.5982]
      ],
      L4: [
        [1662.0, 3.9983, 7.1135],
        [257.0, 2.984, 220.413],
        [236.0, 3.902, 14.227],
        [149.0, 2.741, 213.299]
      ],
      L5: [
        [124.0, 2.259, 7.114]
      ]
    };
  }

  /**
   * Uranus VSOP87 series (simplified for now)
   */
  getUranusSeries() {
    return {
      L0: [
        [548129294.0, 0, 0],
        [9260408.0, 0.8910642, 74.7815986],
        [1504248.0, 3.6271926, 1.4844727],
        [365982.0, 1.899622, 73.297126],
        [272328.0, 3.358237, 149.563197],
        [70328.0, 5.39254, 63.73590],
        [68893.0, 6.09292, 76.26607],
        [61999.0, 2.26952, 2.96895],
        [61951.0, 2.85099, 11.04570],
        [26469.0, 3.14152, 71.81265]
      ],
      L1: [
        [7502543122.0, 0, 0],
        [154458.0, 5.242017, 74.781599],
        [24456.0, 1.71256, 1.48447],
        [9258.0, 0.4284, 11.0457],
        [8266.0, 1.5022, 63.7359],
        [7842.0, 1.3198, 149.5632],
        [3899.0, 0.4648, 3.9322],
        [2284.0, 4.1737, 76.2661],
        [1927.0, 0.5301, 2.9689]
      ],
      L2: [
        [53033.0, 0, 0],
        [2358.0, 2.2601, 74.7816],
        [769.0, 4.526, 11.046],
        [552.0, 3.258, 63.736],
        [542.0, 2.276, 3.932],
        [529.0, 4.923, 1.484],
        [258.0, 3.691, 3.181]
      ],
      L3: [
        [121.0, 0.024, 74.782],
        [68.0, 4.12, 3.93],
        [53.0, 2.39, 11.05],
        [46.0, 0, 0]
      ],
      L4: [
        [114.0, 3.142, 0],
        [6.0, 4.58, 74.78]
      ],
      L5: [
        [1.0, 3.14, 0]
      ]
    };
  }

  /**
   * Neptune VSOP87 series (simplified for now)
   */
  getNeptuneSeries() {
    return {
      L0: [
        [531188633.0, 0, 0],
        [1798476.0, 2.9010127, 38.1330356],
        [1019728.0, 0.4858092, 1.4844727],
        [124532.0, 4.830081, 36.648563],
        [42064.0, 5.41055, 2.96895],
        [37715.0, 6.09221, 35.16409],
        [33785.0, 1.24489, 76.26607],
        [16483.0, 0.00007, 491.55793],
        [9199.0, 4.9375, 39.6175],
        [8994.0, 0.2746, 175.1661]
      ],
      L1: [
        [3837687717.0, 0, 0],
        [16604.0, 4.86319, 1.48447],
        [15807.0, 2.27923, 38.13304],
        [3335.0, 3.6820, 76.2661],
        [1306.0, 3.6732, 2.9689],
        [605.0, 1.505, 35.164],
        [179.0, 3.453, 39.618],
        [107.0, 2.451, 4.453]
      ],
      L2: [
        [53893.0, 0, 0],
        [296.0, 1.855, 1.484],
        [281.0, 1.191, 38.133],
        [270.0, 5.721, 76.266],
        [23.0, 1.21, 2.97]
      ],
      L3: [
        [31.0, 0, 0],
        [15.0, 1.35, 76.27],
        [12.0, 6.04, 1.48]
      ],
      L4: [
        [114.0, 3.142, 0]
      ],
      L5: []
    };
  }

  /**
   * Clear cache to free memory
   */
  clearCache() {
    this.cache.clear();
  }

  /**
   * Get cache statistics
   */
  getCacheStats() {
    return {
      size: this.cache.size,
      loadedSeries: Array.from(this.loadedSeries),
      truncationLevels: Object.keys(this.truncationLevels)
    };
  }

  /**
   * Set precision level for future calculations
   */
  setPrecision(level) {
    if (this.truncationLevels[level]) {
      this.defaultPrecision = level;
      // Clear cache to force recalculation with new precision
      this.clearCache();
    } else {
      throw new Error(`Invalid precision level: ${level}`);
    }
  }
}

// Export for use
window.VSOP87SeriesData = VSOP87SeriesData;