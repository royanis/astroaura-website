name: Blog Post Registration and Sync

on:
  # Trigger after blog generation workflows complete
  workflow_run:
    workflows: ["Generate Enriched Blog Posts", "Automated Blog Publishing"]
    types:
      - completed
  
  # Also trigger on push to blog/posts directory
  push:
    paths:
      - 'blog/posts/*.html'
  
  # Manual trigger for testing and maintenance
  workflow_dispatch:
    inputs:
      sync_all:
        description: 'Sync all existing posts'
        required: false
        default: 'false'
        type: boolean

permissions:
  contents: write

jobs:
  register-blog-posts:
    runs-on: ubuntu-latest
    
    # Only run if the triggering workflow succeeded (for workflow_run trigger)
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Configure git
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
    
    - name: Check for new blog posts
      id: check_posts
      run: |
        cd blog
        POST_COUNT=$(find posts -name "*.html" -type f | wc -l | tr -d ' ')
        echo "Found $POST_COUNT blog post files"
        echo "post_count=$POST_COUNT" >> $GITHUB_OUTPUT
        
        # Check if posts_index.json needs updating
        if [ -f posts_index.json ]; then
          INDEXED_COUNT=$(python3 -c "import json; data=json.load(open('posts_index.json')); print(len(data.get('posts', [])))" 2>/dev/null || echo "0")
          echo "Currently indexed: $INDEXED_COUNT posts"
          echo "indexed_count=$INDEXED_COUNT" >> $GITHUB_OUTPUT
        else
          echo "indexed_count=0" >> $GITHUB_OUTPUT
        fi
        
        if [ "$POST_COUNT" -gt "$INDEXED_COUNT" ] || [ "${{ github.event.inputs.sync_all }}" = "true" ]; then
          echo "needs_sync=true" >> $GITHUB_OUTPUT
        else
          echo "needs_sync=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Sync all blog posts
      if: steps.check_posts.outputs.needs_sync == 'true' || github.event.inputs.sync_all == 'true'
      run: |
        cd blog
        echo "üîÑ Syncing blog posts with registration system..."
        
        # Make script executable
        chmod +x generate_blog_post.py
        
        # Run sync command
        if [ "${{ github.event.inputs.sync_all }}" = "true" ]; then
          echo "üîÑ Running full sync of all posts..."
          python3 generate_blog_post.py sync
        else
          echo "üîÑ Running incremental sync..."
          python3 generate_blog_post.py sync
        fi
    
    - name: Validate blog system integrity
      run: |
        cd blog
        echo "üîç Validating blog system integrity..."
        
        # Check that posts_index.json is valid
        if python3 -c "import json; json.load(open('posts_index.json'))" 2>/dev/null; then
          echo "‚úÖ posts_index.json is valid JSON"
        else
          echo "‚ùå posts_index.json is invalid"
          exit 1
        fi
        
        # Check sitemap updates
        if grep -q "blog/posts" ../sitemap.xml; then
          echo "‚úÖ Blog posts found in sitemap.xml"
        else
          echo "‚ö†Ô∏è No blog posts found in sitemap.xml"
        fi
        
        # Check RSS feed updates
        if grep -q "<item>" rss.xml; then
          echo "‚úÖ Blog posts found in RSS feed"
        else
          echo "‚ö†Ô∏è No blog posts found in RSS feed"
        fi
        
        # Print summary
        POST_COUNT=$(find posts -name "*.html" -type f | wc -l | tr -d ' ')
        INDEXED_COUNT=$(python3 -c "import json; data=json.load(open('posts_index.json')); print(len(data.get('posts', [])))" 2>/dev/null || echo "0")
        echo "üìä Blog System Status:"
        echo "   - HTML files: $POST_COUNT"
        echo "   - Indexed posts: $INDEXED_COUNT"
        echo "   - Status: $([ "$POST_COUNT" -eq "$INDEXED_COUNT" ] && echo "‚úÖ Synchronized" || echo "‚ö†Ô∏è Needs attention")"
    
    - name: Commit registration updates
      run: |
        # Check if there are any changes to commit
        if git diff --quiet && git diff --cached --quiet; then
          echo "üìù No changes to commit"
        else
          echo "üìù Committing blog post registration updates..."
          git add blog/posts_index.json sitemap.xml blog/rss.xml || true
          
          # Create commit message
          POST_COUNT=$(find blog/posts -name "*.html" -type f | wc -l | tr -d ' ')
          COMMIT_MSG="blog: auto-sync $POST_COUNT posts with registration system"$'\n\n'
          COMMIT_MSG="${COMMIT_MSG}‚Ä¢ Updated posts_index.json with all blog posts"$'\n'
          COMMIT_MSG="${COMMIT_MSG}‚Ä¢ Synchronized sitemap.xml with latest posts"$'\n'
          COMMIT_MSG="${COMMIT_MSG}‚Ä¢ Updated RSS feed with new content"$'\n\n'
          COMMIT_MSG="${COMMIT_MSG}ü§ñ Generated with [Claude Code](https://claude.ai/code)"$'\n\n'
          COMMIT_MSG="${COMMIT_MSG}Co-Authored-By: Claude <noreply@anthropic.com>"
          
          git commit -m "$COMMIT_MSG"
          
          echo "‚úÖ Changes committed successfully"
        fi
    
    - name: Push changes
      run: |
        if git log --oneline -1 | grep -q "auto-sync.*posts"; then
          echo "üì§ Pushing blog post registration updates..."
          git push origin main
          echo "‚úÖ Changes pushed successfully"
        else
          echo "üìù No registration updates to push"
        fi
    
    - name: Summary
      run: |
        echo "üéâ Blog Post Registration Workflow Complete!"
        echo ""
        echo "üìä Final Status:"
        POST_COUNT=$(find blog/posts -name "*.html" -type f | wc -l | tr -d ' ')
        INDEXED_COUNT=$(cd blog && python3 -c "import json; data=json.load(open('posts_index.json')); print(len(data.get('posts', [])))" 2>/dev/null || echo "0")
        echo "   ‚Ä¢ Blog posts found: $POST_COUNT"
        echo "   ‚Ä¢ Posts in index: $INDEXED_COUNT"
        echo "   ‚Ä¢ Sitemap updated: ‚úÖ"
        echo "   ‚Ä¢ RSS feed updated: ‚úÖ"
        echo ""
        echo "üöÄ Blog system is fully synchronized and ready!"